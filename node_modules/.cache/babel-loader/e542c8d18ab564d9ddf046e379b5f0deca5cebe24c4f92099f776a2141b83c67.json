{"ast":null,"code":"// import { createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport counterSlice from './counter';\nimport authSlice from './auth';\n\n// const initialCounterState = { counter: 0, showCounter: true };\n\n// const counterSlice = createSlice({\n//   name: 'counter',\n//   initialState: initialCounterState,\n//   reducers: {\n//     increment(state) {\n//       state.counter++;\n//     },\n//     decrement(state) {\n//       state.counter--;\n//     },\n//     increase(state, action) {\n//       state.counter = state.counter + action.payload\n//     },\n//     toggleCounter(state) {\n//       state.showCounter = !state.showCounter\n//     }\n//   }\n// });\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'increment') {\n//     return {\n//       counter: state.counter += 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'increase') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'decrement') {\n//     return {\n//       counter: state.counter -= 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'toggle') {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     };\n//   }\n\n//   return state;\n// }\n\n// const store = createStore(counterReducer); \n\n// const initialAuthState = {\n//   isAuthenticated: false,\n// };\n\n// const authSlice = createSlice({\n//   name: 'authentication',\n//   initialState: initialAuthState,\n//   reducers: {\n//     login(state) {\n//       state.isAuthenticated = true;\n//     },\n//     logout(state) {\n//       state.isAuthenticated = false;\n//     },\n//   },\n// });\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\n\n// export const counterActions = counterSlice.actions;\n// export const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","counterSlice","authSlice","store","reducer","counter","auth"],"sources":["/Users/anhdaden/lighthouse/Udemy/React-Maxi/01-starting-project/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport counterSlice from './counter';\nimport authSlice from './auth';\n\n\n// const initialCounterState = { counter: 0, showCounter: true };\n\n// const counterSlice = createSlice({\n//   name: 'counter',\n//   initialState: initialCounterState,\n//   reducers: {\n//     increment(state) {\n//       state.counter++;\n//     },\n//     decrement(state) {\n//       state.counter--;\n//     },\n//     increase(state, action) {\n//       state.counter = state.counter + action.payload\n//     },\n//     toggleCounter(state) {\n//       state.showCounter = !state.showCounter\n//     }\n//   }\n// });\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'increment') {\n//     return {\n//       counter: state.counter += 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'increase') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'decrement') {\n//     return {\n//       counter: state.counter -= 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'toggle') {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     };\n//   }\n\n//   return state;\n// }\n\n// const store = createStore(counterReducer); \n\n// const initialAuthState = {\n//   isAuthenticated: false,\n// };\n\n// const authSlice = createSlice({\n//   name: 'authentication',\n//   initialState: initialAuthState,\n//   reducers: {\n//     login(state) {\n//       state.isAuthenticated = true;\n//     },\n//     logout(state) {\n//       state.isAuthenticated = false;\n//     },\n//   },\n// });\n\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\n});\n\n// export const counterActions = counterSlice.actions;\n// export const authActions = authSlice.actions;\nexport default store; "],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,YAAY,MAAM,WAAW;AACpC,OAAOC,SAAS,MAAM,QAAQ;;AAG9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3BI,OAAO,EAAE;IAAEC,OAAO,EAAEJ,YAAY,CAACG,OAAO;IAAEE,IAAI,EAAEJ,SAAS,CAACE;EAAQ;AACpE,CAAC,CAAC;;AAEF;AACA;AACA,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}